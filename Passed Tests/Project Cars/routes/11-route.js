const router = require('express').Router();
const getCarsByBrand = require('../controllers/05-controller');
/* ‚ö†Ô∏è No modificar nada arriba de esta l√≠nea ‚ö†Ô∏è

  1Ô∏è‚É£1Ô∏è‚É£ ***** EJERCICIO 11 ***** - GET /cars/:brandName 1Ô∏è‚É£1Ô∏è‚É£:
  
  //* Integrar la funci√≥n getCarsByBrand que desarrollaste previamente (Ejercicio 5) para obtener los coches precedentes de una marca.
  //* Responder con el resultado de la operaci√≥n, el formato debe ser: { brand: 'La marca enviada', results: 'Los coches encontrados' }.
  //* Responder con el mensaje adecuado si no se encontraron coches asociados a la marca.
  //* Si surge alg√∫n error durante la operaci√≥n, responder con el mensaje correspondiente.
  //* Si el par√°metro el par√°metro req.query.sort no equivale a "lowPrice" o a "highPrice", responder el mensaje adecuado. 
  //* Si el par√°metro req.params.brandName no es una palabra con S√ìlo letras responder con el mesnaje adecuado.
  
    üì¢ PUNTOS A TENER EN CUENTA üì¢
  //* 1) Recibir√°s los argumentos necesarios para ejecutar la funci√≥n getCarsByBrand mediante las propiedades "params" 
  //* y "query" de *req*.
  //* 2) Si algo falla debes responder con el mensaje del error.
  //* 3) ¬°Revisa en los test el status que deben tener tus respuestas!
  //* 4) Record√° validar los par√°metros que recibas a trav√©s de la URL.
  //* 5) Debes responder con los coches COMPLETOS, no s√≥lo su ID.
  //* 6) Recuerda que los parametros de URL son recibidos como string.
*/

const alphaNumeric = (arg) => {
  return /\d/.test(arg)
}

router.get('/cars/:brandName', (req, res) => {
  let { brandName } = req.params
  const { sort } = req.query

  if (alphaNumeric(brandName)) return res.status(400).json({ error: 'El par√°metro brandName es inv√°lido' })
  if (sort !== 'highPrice' && sort !== 'lowPrice' && sort) return res.status(400).json({ error: `El par√°metro sort es inv√°lido` })

  try {
    const result = getCarsByBrand(brandName, sort)
    if (result === "No se encontraron coches") res.status(400).json({ error: "No se encontraron coches" })
    return res.json({ brand: brandName, results: result })
  }
  catch (error) {
    if (error.message === 'Marca no encontrada') return res.status(404).json({ error: error.message })
    return res.status(400).json({ error: error.message })
  }

})

//‚ö†Ô∏è No modificar nada debajo de esta l√≠nea ‚ö†Ô∏è
module.exports = router;
